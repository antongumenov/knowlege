//_ ПРИМИТИВНЫЕ ТИПЫ
//~ целые знаковые
// int      - либо int32 либо int64 в зависимости от архитектуры
// int8     - от -128 до 127
// int16    - от -32768 до 32767    
// int32    - от -2147483648 до 2147483647
// int64    - –9 223 372 036 854 775 808 до 9 223 372 036 854 775 807

//~ целые беззнаковые
// uint     - либо uint32 либо uint64 в зависимости от архитектуры
// uint8    - от 0 до 255 
// uint16   - 0 до 65535 
// uint32   - 0 до 4294967295
// uint64   - 0 до 18 446 744 073 709 551 615

//~ дробные
// float32  - от 1.4*10-45 до 3.4*1038
// float64  - от 4.9*10-324 до 1.8*10308 

//~ byte
// byte - синоним int8, для работы с байтами

//~ логические
// bool  - true или false
// string - строка
// rune - символ Unicode, псевданим int32, одна руна записывается в ''
//! руны под капотом это int, и коды расставлены по возрастанию
//! по этому руны можно сравнивать, например 
//! ('a' <= char && char <= 'z') || ('A' <= char && char <= 'Z')
//! проверяет английская ли это буква
// '0' <= char && char <= '9'
//! проверяет цифра ли это


//_ ОПРЕДЕЛЕНИЕ ПЕРЕМЕННЫХ
//~ с указанием типа
// инициализация значенеим по умолчанию (0)
var i int

// инициализация числом 15
var i int = 15 

//~ с автоопределением типа, только с инициализацией
// здесь int
var i = 15

//~ короткий синтаксис
// работает только для переменных внутри функций
// здесть int
i:=15

//~ несколько переменных
// так
var(
    name = "tom"
    age = 27
)
// или так
var name, age = "Tom", 27

//_ ЗНАЧЕНИЯ ПО УМОЛЧАНИЮ
// int         0
// unit        0
// byte        0
// float64     0
// bool        false
// string      "" (пустая строка)
// rune        0

//_ ПУСТОЙ ИДЕНТИФИКАТОР _
// используется когда значение не будет использовано

//_ ПЕРЕПОЛНЕНИЕ
// если к int8 = 127 прибавить 1
// получим -128

//_ ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ
// используй их только как константы для значений которые не меняются в ходе работы всей программы
// чтобы избежать применение глобальных переменных, передавай их в функцию, а затем возвращай их значение

