//>> ПРОИЗВОДНЫЕ ТИПЫ
//<< производные типы
// тип на основе другого типа
// сним можно делатиь все что с uint
// но вместо него использовать uint нельзя

//<< инициализация
type mile int

// ~ применение
// применяю когда хочу расширить стандартный тип дополнительным функционалом
// например добавить проверку на знак
func (m *mile) isPositive() bool {
	var zero mile = 0
	return *m > zero
}

//>> ПСЕВДАНИМЫ
// в отличии от производного типа не является отдельным типом
// применяется когда неудобному, слишком длинному или совпадающему другим типом типу
// нужно дать более понятное имя
type logLevel = uint

func printLogLevel(ll logLevel) {
	fmt.Println(ll)
}
func main() {
	var ui uint = 5
    // я должен передать logLevel
    // но могу передать и uint
	printLogLevel(ui)
}