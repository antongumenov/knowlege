//>> ОПЕРАТОРЫ
//<< арифметические
// + - сложение
// - - вычетание
// * - умножение
// / - деление
// % - остаток от деления, может возвращать отрицательное значение

// складывание строк
st1 := "string1"
st2 := "string2"
st := st1 + " " + st2

//<< сравнения
// == - возвращает true, если операнды равны.
// != - возвращает true, если операнды не равны.
// <  - возвращает true, если первый операнд меньше второго операнда.
// >  - возвращает true, если первый операнд больше второго ранда.
// <= - возвращает true, если первый операнд меньше или равен второму операнду.
// >= - возвращает true, если первый операнд больше или равен второму операнду.

//<< логические
// || - возвращает true (истину), если любой из операндов true. Если первый операнд true, то второй операнд не будет оцениваться.
// && - возвращает true, если оба операнда true. Если первый операнд false, то второй операнд не будет оцениваться.
// !  - возвращает true, если операнд false, и false, если операнд true.

//>> ПОРАЗРЯДНЫЕ ОПЕРАЦИИ
// или, байт будет 1 если хоть у одного будет 1
var a int = 5 | 2;          // 101 | 010 = 111  - 7

// и, байт будет 1 если у обоих будет 1
var b int = 6 & 2;          // 110 & 010 = 010  - 2

// исключающее или, байт будет 1 если только у одного будет 1
var c int = 5 ^ 2;          // 101 ^ 010 = 111 - 7

// выражении z = x &^ y каждый бит z равен 0, если соответствующий бит y равен 1. 
// Если бит в y равен 0, то берется значение соответствующего бита из x.
var d int = 5 &^ 6;         // 101 &^ 110 = 001 - 1

var b int = 2 << 2;           // 10  на два разрядов влево = 1000 - 8
var c int = 16 >> 3;          // 10000 на три разряда вправо = 100 - 2