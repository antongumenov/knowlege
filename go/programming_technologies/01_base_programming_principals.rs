//>> BASE PRINCIPALS OF PROGRAMING
//<< DRY - do not repeat your self
// любое повторение кода выноси в отдельную функцию
// так как менять придется во всех местах сразу

//<< KISS - keep it simple
// делай все как можно проще и читабильнее
// чтобы можно было легко понимать код
// все сложные функции дроби на более мелкие и понятные
// давай логически понятные названия

//<< YAGNI - you aint gonna need it
// не пиши функционал заранее
// возможно проект не взлетит
// не делай лишних интерфейсов типа если не будешь менять базу данных
// делай только то что нужно сейчас

//<< SOLID
//! single responsibility - принцип единственной ответственности
// одна струетура должна решать только одну конкретную задачу
// должна принять внешние данные и вернуть переработанные

//! open/close - принцип открытости закрытости
// стуктура должна быть открыта для расширения
// но закрыта для изменения
// нельзя менять написанный функционал, иначе все посыпится
// но можно на основе структуры создать ее наследника, расширяющего функционал родителя

// в го как правило расширяемый тип делают интерфейсом
// и потом от него делают варианты и апгрейды

//! barbara liskov - принцип подстановки барбары лисков
// любой наследник должен уметь все то что может его родитель
// и принимающий функционал не должен заметить разници, что в него передают
// в го опять это делается как в предидущем пункте

//! interface segrigation - принцип разделения интерфейсов
// каждый тип должен делать только то что от него требуется и не чего лишнего
// интерфейсы должны быть маленькими, только с необходимым функуионалам
// один интерфейс - один круг задач